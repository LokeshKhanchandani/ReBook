/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mainPack;

import Templates.BookTemplate;
import Templates.KartTemplate;
import Entities.KartItem;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.ListCellRenderer;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 *
 * @author mp
 */
public class KartPage extends javax.swing.JFrame {

    /**
     * Creates new form KartPage
     */
     private ArrayList<KartItem> myKartItem;
     private ArrayList<Integer> selectedItems = new ArrayList<>();
     
     
    public KartPage() {
        initComponents();
        
        loadKart();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        Select = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        kartList = new javax.swing.JList();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        total_cart_items = new javax.swing.JTextField();
        total_cart_value = new javax.swing.JTextField();
        buy_item_button = new javax.swing.JButton();
        back_homePage_button = new javax.swing.JButton();
        delete_item_button = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Book Name");

        jLabel2.setText("Supplier Name");

        jLabel3.setText("Price");

        Select.setText("Select");

        kartList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(kartList);

        jLabel4.setText("Total Items");

        jLabel5.setText("Cart Total");

        total_cart_value.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                total_cart_valueActionPerformed(evt);
            }
        });

        buy_item_button.setText("BUY SELECTED");
        buy_item_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buy_item_buttonActionPerformed(evt);
            }
        });

        back_homePage_button.setText("HOME PAGE");
        back_homePage_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                back_homePage_buttonActionPerformed(evt);
            }
        });

        delete_item_button.setText(" DELETE SELECTED");
        delete_item_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_item_buttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(total_cart_value, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(total_cart_items))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2)
                        .addGap(32, 32, 32)
                        .addComponent(jLabel3)
                        .addGap(36, 36, 36)
                        .addComponent(Select))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(125, 125, 125))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addComponent(delete_item_button)
                .addGap(18, 18, 18)
                .addComponent(buy_item_button)
                .addGap(25, 25, 25)
                .addComponent(back_homePage_button)
                .addGap(72, 72, 72))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(Select))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(total_cart_items, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(total_cart_value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buy_item_button)
                    .addComponent(back_homePage_button)
                    .addComponent(delete_item_button))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void total_cart_valueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_total_cart_valueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_total_cart_valueActionPerformed

    private void back_homePage_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_back_homePage_buttonActionPerformed
        // TODO add your handling code here:
         new HomePage().setVisible(true);
         this.setVisible(false);
    }//GEN-LAST:event_back_homePage_buttonActionPerformed

    private void buy_item_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buy_item_buttonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buy_item_buttonActionPerformed

    private void delete_item_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_item_buttonActionPerformed
        // TODO add your handling code here:
        
        // Database se delete krna hai aur 
    }//GEN-LAST:event_delete_item_buttonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(KartPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(KartPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(KartPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(KartPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new KartPage().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Select;
    private javax.swing.JButton back_homePage_button;
    private javax.swing.JButton buy_item_button;
    private javax.swing.JButton delete_item_button;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList kartList;
    private javax.swing.JTextField total_cart_items;
    private javax.swing.JTextField total_cart_value;
    // End of variables declaration//GEN-END:variables
 
    private ArrayList<KartItem> getKartItem() {
        //get the inputs from cart database
        
        return null;
    }
    
    
    public void loadKart()
    {
        try{
           myKartItem=getKartItem();
        }
        catch(Exception e){
 
        }
                
        populate__kartList(myKartItem);
    }

    private void populate__kartList(ArrayList<KartItem> myKartItem) {
         //To change body of generated methods, choose Tools | Templates.
        DefaultListModel<KartItem> dm=new DefaultListModel<KartItem>();
        dm.addElement(new KartItem("physics","hcv",500));
        dm.addElement(new KartItem("maths","rds",1000));
        dm.addElement(new KartItem("chem","msc",1500));  
        
        kartList.setModel(dm);
        kartList.setCellRenderer(new KartTemplate());
        kartList.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        //kartList.addMouseListener(new MouseListener);
        kartList.addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if(!e.getValueIsAdjusting()){
                    
                    int index = kartList.getSelectedIndex();
                    System.out.println(index+" is Clicked");
                    //System.out.println(kartList.getSelectedIndex());
                    //System.out.println(kartList.getSelectedIndices().length+"uhuh");
//                    System.out.println("List: ");
//                    for(int i = 0;i<selectedItems.size();++i){
//                            System.out.print(selectedItems.get(i)+" ");
//                        }
//                    System.out.println();
                    
                    System.out.println("List1: ");
                    for(int i = 0;i<selectedItems.size();++i){
                            System.out.print(selectedItems.get(i)+" ");
                        }
                    System.out.println();

                    if(!selectedItems.contains(index))
                        selectedItems.add(kartList.getSelectedIndex());
                    else{
                        selectedItems.remove(index);
                        System.out.println("Index Removed");
                    }

                    int size = selectedItems.size();
                    System.out.println("List: ");
                    for(int i = 0;i<selectedItems.size();++i){
                            System.out.print(selectedItems.get(i)+" ");
                        }
                    System.out.println();
                    
                    int select[];
                    if(size == 0){
                        System.out.println("Empty");
                        select = null;
                    }else{
                    
                     select = new int[selectedItems.size()];
                    

                        for(int i = 0;i<size;++i){
                            select[i] = selectedItems.get(i);
                        }

//                        for(int i = 0;i<size;++i){
//                            System.out.print(select[i]+" ");
//                        }

                        //System.out.println();
                    }
                    
                    kartList.removeListSelectionListener(this);
                    kartList.setSelectedIndices(select);
                    kartList.addListSelectionListener(this);
                }
            }
        });
        total_cart_value.setText("1"); // find total cart item values from db and add here
        total_cart_items.setText("3"); // find total cart item  from db and add here
        
        
    }
    
   

   
    
}
